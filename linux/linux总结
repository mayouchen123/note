Linux 使用总结

ubuntu lamp stat ----------------------------------------
修改用户密码
sudo passwd 用户名
修改root用户密码
sudo passwd root

sudo apt-get update  获取软件源列表
sudo apt-get install 安装软件

安装apache
sudo apt-get install apache2
    查看版本    apache2 -v

安装php5
sudo apt-get install php5




ubuntu lamp end ----------------------------------------

文件处理

查询目录内容  ls
ls [选项] [文件或目录]
    选项：
        -a  显示所有文件，包括隐藏文件
        -l  查看详细信息
        -d  查看目录属性
        -h  人性化显示文件大小
        -i  显示inode


    目录处理命令
        创建目录
            mkdir -p [目录名]
                -p  递归创建    mkdir -p japan/cangls
        切换所在目录
            cd [目录]
            cd ~    进入当前用户的家目录
            cd -    进入上次目录
            cd ..   进入上一级目录
            cd .    进入当前目录
        删除目录
            rmdir   删除空目录
    文件处理命令
        删除文件或目录 rm
        rm -rf  [文件或目录]
            选项：
            -r  删除目录
            -f  强制
        复制命令：cp
            cp  [选项]    [原文件或目录]    [目标目录]
                选项:
                -r  复制目录
                -p  连带文件属性复制
                -d  或源文件是链接文件，则复制链接属性
                -a  相当于 -pdr
        剪切或改名命令 mv
            mv  [原文件或目录]    [目标目录]
    链接命令:ln
        ln -s [原文件] [目标文件]
        功能描述：生成链接文件
            选项：-s 创建软链接
        硬链接特征
            拥有相同的i节点和存储block块,可以看作是同一个文件
            可以通过i节点识别
            不能跨分区
            不能针对目录使用
        软链接特征：
            类似windows快捷方式
            软链接拥有自己的的I节点和block块，但是数据块中只保存原文件的文件名和I节点号，并没有实际的文件数据
            lrwxrwxrwx  l软链接
                软链接权限都为rwxrwxrwx
            修改任意文件，另一个都改变
            删除原文件，软链接不能使用

    文件搜索命令
        文件搜索命令locate
            locate 文件名
            在后台数据库中按文件名搜索，搜索速度更快 只能搜索文件名
            /var/lib/mlocate
            #locate命令所搜索的后台数据库
            updatedb
            强制更新数据库
            /etc/updatedb.conf配置文件
            PRUNE_BIND_MOUNTS="yes" # 开启搜索限制
            PRUNEFS #搜索时，不搜索的文件系统
            PRUNENAMES= #搜索时，不搜索的文件类型
            PRUNEPATHS= #搜索时，不搜索的路径

        命令搜索命令whereis与which
            whereis 命令名
            #搜索命令所在路径及帮助文档所在位置
            选项：
                -b  只查找可执行文件
                -m  只查找帮助文件

        PATH环境变量
            PATH环境变量：定义的是系统搜索命令的路径
            echo $PATH

        文件搜索命令find
            find    [搜索范围]  [搜索条件]  #搜索文件
            find    /   -name   install.log
            #避免大范围搜索，会非常耗费系统资源
            #find是在系统当中搜索符合条件的文件名。如果需要匹配
            使用通配符匹配，通配符是完全匹配
            Linux中的通配符
            *   匹配任意内容
            ?   匹配任意一个字符
            []  匹配任意一个中括号内的字符
            find /root -iname install.log   #不区分大小写
            find /root -user root   #按照所有者搜索
            find /root -nouser  #查找没有所有者的文件

            find /var/log/  -mtime +10      #查找10天前修改的文件
                -10 10天内修改文件
                10  10天当天修改的文件
                +10 10天前修改的文件

                atime   文件访问时间
                ctime   改变文件属性
                mtime   修改文件属性

            find /etc -size 2M  #查找文件大小于是25K的文件

            find /etc -inum 262422  #查找I节点是262422的文件

            复杂查询
            find /etc -size +20K -a -size -50K  #查找/etc/目录下，大于20K并且小于50KB的文件

            -a and  逻辑与，两个条件都满足
            -o or   逻辑或，两个条件满足一个即可

            find /etc -size +20K -a -size -50K -exec ls -lh {} \; #查找/etc/目录下，大于20K并且小于50KB的文件，并显示详细信息
            #-exec/-ok 命令 {} \; 对搜索结果执行操作

        字符串搜索命令grep
            grep 选项 字符串 文件名 #在文件当中匹配符合条件的字符串
            选项：
                -i 忽略大小写
                -v 排除指定字符串

            grep "size" test.log

        find命令与grep命令的区别
            find命令：在系统当中搜索符合条件的文件名，如果需要匹配，使用通配符匹配，通配符是完全匹配
            grep命令：在文件当中搜索符合条件的字符串，如果需要匹配，使用正则表达式进行匹配，正则表达式时包含匹配


帮助命令
    man
        man 命令  #获取指定命令的帮助
        man ls #查看ls的帮助
        man -f 命令 #查看命令拥有那个级别的帮助

        man的级别
        1：查看命令的帮助
        2：查看可被内核调用的函数的帮助
        3：查看函数和函数库的帮助
        4：查看特殊文件的帮助(主要是/dev目录下的文件)
        5：查看配置文件的帮助
        6：查看游戏的帮助
        7：查看其它杂项的帮助
        8：查看系统管理员可用命令的帮助
        9：查看和内核相关文件的帮助

        查看和命令相关的所有帮助
        man -k 命令 相当于 apropos 命令
        apropos passwd


    其它帮助命令
        选项帮助
        命令 --help #获取命令选项的帮助
        ls --help

        shell 内部命令帮助
        help shell内部命令 #获取shell内部命令的帮助
        help cd

    详细命令帮助info
        info 命令
        - 回车：进入子帮助页面(带有*号标记)
        - u 进入上层页面
        - n 进入下一个帮助小节
        - p 进入上一个帮助小节
        - q 退出


压缩与解压命令
    常用压缩格式：.zip .gz .bz2
        .zip格式压缩
            zip 压缩文件名 源文件 #压缩文件
            zip -r 压缩文件名 源目录 #压缩目录
            unzip 文件名.zip #解压缩文件
        .gz格式压缩
            gzip 源文件 #压缩为.gz格式的压缩文件，源文件会消失
            gzip -c 源文件 > 压缩文件 #压缩为.gz格式，源文件保留
            例如:gzip -c cangls > cangls.gz
            gzip -r 目录 #压缩目录下所有的子文件，但是不能压缩目录
            gzip -d 压缩文件 #解压缩文件
            gunzip 压缩文件 #解压缩文件
        .bz2格式压缩
            bzip2 源文件 #压缩为.bz2格式，不保留源文件
            bzip2 -k 源文件 #压缩之后保留源文件
            注意：bzip2命令不能压缩目录
            bzip2 -d 压缩文件 #解压缩，-k保留压缩文件
    常用压缩格式：.tar.gz  .tar.bz2
    打包命令tar
        tar -cvf 打包文件名 源文件
            选项：
                -c 打包
                -v 显示过程
                -f 指定打包后的文件名
                例如:tar -cvf longzls.tar longzls
        解压：tar -xvf 打包文件

        .tar.gz压缩格式
        其实.tar.gz格式是先打包为.tar格式，再压缩为.gz格式
        tar -zcvf 压缩包名.tar.gz 源文件
            选项：
                -z 压缩为.tar.gz格式
        tar -zxvf 压缩包.tar.gz
            选项：
                -x 解压缩.tar.gz格式
        只查看压缩包内容不解压
        tar -ztvf 压缩文件

        .tar.bz2压缩格式
        tar -jcvf 压缩包名.tar.bz2 源文件
        选项:
            -z 压缩为.tar.bz2格式
        tar -jxvf 压缩包名.tar.bz2
        选项:
            -x 解压缩.tar.bz2格式
        tar -jxvf 压缩文件名 -C 解压文件位置


关机和重启命令
    shutdown 命令
    shutdown 选项 时间
    选项:
        -c 取消前一个关机命令
        -h 关机
        -r 重启

    shutdown -r 05:30 &
    &符表示命令后台运行不占用命令空间


其它命令
    挂载命令
        查询与自动挂载
            mount       #查询系统中已经挂载的设备
            mount -a    #依据配置文件/etc/fstab的内容，自动挂载
        挂载命令格式
            mount [-t文件系统] [-o特殊选项] 设备文件名 挂在点
            选项：
                -t 文件系统：加入文件系统类型来指定挂载的类型，可以ext3、ext4、iso9660等文件系统
                -o 特殊选项：可以指定挂载的额外选项
                    atime/noatime   更新访问时间/不更新访问时间。访问分区文件时，是否更新文件的访问时间，默认为更新
                    async/sync  异步/同步,默认为异步
                    auto/noauto 自动/手动，mount -a 命令执行时，是否会自动安装/etc/fstab文件内容挂载，默认为自动
                    defaults    定义默认值，相当于rw,suid,dev,exec,auto,nouser,async这七个选项
                    exec/noexec 执行/不执行，设定是否允许在文件系统中执行可执行文件，默认是exec允许
                    remount     重新挂载已经挂载的文件系统，一般用于指定修改特殊权限
                    rw/ro       读写/只读，文件系统挂在时，是否具有读写权限，默认是rw
                    suid/nosuid 具有/不具有SUID权限，设定文件系统是否具有SUID和SGID的权限，默认是具有
                    user/nouser 允许/不允许普通用户挂载，设定文件系统是否允许普通用户挂载，默认是不允许的，只有root可以挂载分区
                    usrquota    写入代表文件系统支持用户磁盘配额，默认不支持
                    grpquota    写入代表文件系统支持组磁盘配置，默认不支持
        挂载光盘
            mkdir /mnt/cdrom/   #建立挂载点
            mount -t iso9660 /dev/cdrom/mnt/cdrom/  #挂载光盘
            mount /dev/sr0/mnt/cdrom/
        卸载光盘
            umount 设备名
                umount  /mnt/cdrom/
        U盘挂载
            fdisk -l #查看U盘设备文件名
            mount -t vfat /dev/sdb1 /mnt/usb/   #注意：Linux默认是不支持NTFS文件系统的


用户登录查看命令
    查看登录用户信息
        w 用户名
            命令输出
            USER：登录的用户名
            TTY：登录终端
            FROM：从哪个IP地址登录
            LOGIN@：登录时间
            IDLE：用户闲置时间
            JCPU：指的是和该终端连接的所有进程占用时间，这个时间并不包括过去的后台作业时间，但却包括当前正在运行的后台作业所占用的时间
            PCPU：是指当前进程所占用的时间
            WHAT：当前正在运行的命令

    查询登录用户信息
        who

    查询当前登录和过去登录的用户信息
        last
        last命令默认是读取/var/log/wtmp文件数据
        命令输出
            - 用户名
            - 登录终端
            - 登录IP
            - 登录时间
            - 退出时间(在线时间)

    查看所有用户的最后一次登录时间
        lastlog
        lastlog命令默认是读取/var/log/lastlog文件内容
        命令输出
            - 用户名
            - 登录终端
            - 登录IP
            - 最后一次登录时间


shell命令
    echo 输出命令
        echo [选项] [输出内容]
        选项:
            -e 支持反斜线控制的字符转换
        在终端输出有颜色的字符
        echo -e "\e[1;31m 嫁人就嫁凤姐 \e[0m"      1开启
        #输出颜色
            30m=黑色  31m=红色  32m=绿色  33m=黄色
            34m=蓝色  35m=洋红  36m=青色  37m=白色

        第一个脚本
            vim hello.sh
            #!/bin/Bash
            #The first program
            echo -e "\e[1;34m hello world \e[0m"r
        脚本执行
            赋予执行权限，直接运行
            chmod 755 hello.sh
            ./hello.sh
            通过Bash调用执行脚本
            bash hello.sh

    Bash的基本功能
        命令别名与快捷键
            alias #查看系统当中所有的命令别名
            设置别名 alias 别名="原命令"
            alias ls='ls --color=never'
            这种设置别名，重启之后失效

            别名永久生效与删除别名
            vi ~/.bashrc    #写入环境变量配置文件
            unalias #删除别名

    历史命令
        history [选项] [历史命令保存文件]
        选项：
            -c  清空历史命令
            -w  把缓存中的历史命令写入历史命令保存文件~/.bash_history

        vim /etc/profile
        修改HISTSIZE = 10000    #修改历史命令的最大条数
        历史命令的重复调用
        使用上、下箭头调用以前的历史命令
        使用"!n"重复执行第n条命令历史
        使用"!!"重复执行上一条命令
        使用"!字串"重复执行最后一条以该字串开头的命令

    输出重定向
        标准输出重定向
            命令  >   文件         以覆盖的方式，把命令的正确输出到指定的文件或设备当中
            命令  >>   文件        以追加的方式，把命令的正确输出到指定的文件或设备当中
        标准错误输出重定向
            错误命令  2>文件        以覆盖的方式，把命令的错误输出到指定的文件或设备当中
            错误命令  2>>文件       以追加的方式，把命令的错误输出到指定的文件或设备当中
        正确输出和错误输出同时保存
            命令  >   文件  2>&1   以覆盖的方式，把正确输出和错误输出都保存到同一个文件中
            命令  >>   文件  2>&1  以追加的方式，把正确输出和错误输出都保存到同一个文件中
            命令  &>文件           以覆盖的方式，把正确输出和错误输出都保存到同一个文件中
            命令  &>>文件          以追加的方式，把正确输出和错误输出都保存到同一个文件中  和  命令 >> 文件 2>&1 一样
            命令 >> 文件1 2>>文件2    把正确的输出追加到文件1中，把错误的输出保存到文件2中

    输入重定向
        wc  [选项]    [文件名]
        选项：
            -c统计字节数
            -w统计单词数
            -l统计行数
        命令<文件把文件作为命令的输入
        命令<<标识符
        标识符把标识符之间内容作为命令的输入
            wc 文件名

    管道符
        多命令顺序执行
        多命令执行符       格式              作用
        ;                命令1;命令2        多个命令顺序执行，命令之间没有任何逻辑关系
        &&               命令1&&命令2       逻辑与
                                           当命令1正确执行，则命令2才会执行
                                           当命令1执行正确，则命令2不会执行
        ||               命令1||命令2       逻辑与
                                            当命令1执行不正确，则命令2才会执行
                                            当命令1正确执行，则命令2不会执行
        管道符
        命令格式
            命令1 | 命令2   #命令1的正确输出作为命令2的操作对象

        通配符
        通配符         作用
        ?             匹配一个任意字符
        *             匹配0个或任意多个字符，也就是可以匹配任何内容
        []            匹配中括号中任意一个字符。例如：[abc]代表一定匹配一个字符，或者是a或则是b,或则是c
        [-]           匹配中括号中任意一个字符，代表一个范围。例如：[a-z]代表匹配一个小写字母
        [^]           逻辑与，表示匹配不是中括号内的一个字符。例如：[^0-9]代表匹配一个不是数字的字符




















常用快捷键
    ctrl + l    清屏
    ctrl + c    强制终止当前命令
    ctrl + a    光标移动到命令行首
    ctrl + e    光标移动到命令行尾
    ctrl + u    从光标所在位置删除到行首
    ctrl + z    把命令放入后台
    ctrl + r    在历史命令中搜索
常用目录作用
    /根目录
    /bin命令保存目录(普通用户就可以读取的命令)
    /boot启动目录，启动相关文件
    /dev设备文件保存目录
    /etc配置文件保存目录
    /home普通用户的家目录
    /lib系统库保存目录
    /mnt系统挂载目录
    /media挂载目录
    /root超级管理员家目录
    /tmp临时目录
    /sbin命令保存目录(超级用户才能使用的目录)
    /proc直接写入内存的
    /sys
    /usr系统软件资源目录
        /usr/bin/系统命令(普通用户)
        /usr/sbin/系统命令(超级用户)
    /var系统相关文档内容
















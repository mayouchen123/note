/**
 * PHP面试题
 * peter
 * blog:http://www.xulukun.cn
 */

1.php变量作用域有哪些？
	局部变量
	全局变量
	静态变量

2.九九乘法表
	for ($i=1; $i <=9 ; $i++) { 
		for ($j=1; $j <= $i ; $j++) { 
			echo "$i * $j"."=".($i*$j)."&nbsp&nbsp";
		}
		echo "<br/>";
	}

3.php分为几种函数
	系统函数
	自定义函数
	
4.请用最简单的语言告诉我PHP是什么？
	PHP全称：Hypertext Preprocessor，是一种用来开发动态网站的服务器脚本语言。

5.什么是MVC？
	MVC由Model（模型）, View（视图）和Controller（控制器）组成，PHP MVC可以更高效地管理好3个不同层的PHP代码。
	Model：数据信息存取层。
	View：view层负责将应用的数据以特定的方式展现在界面上。
	Controller：通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据。

6.在页面中引用CSS有几种方式？
	在页面中使用CSS有3中方式：
	引用外部CSS文件
	内部定义Style样式
	内联样式

7.PHP支持多继承吗？
	不可以。PHP类只能继承一个父类，并用关键字“extended”标识。

8.请问PHP中echo和print有什么区别？
	这两个看起来很相似，因为它们都是将一些值打印在屏幕上。但是echo和print的本质区别在于：echo用来输出字符串，显示多个值的时候可以用逗号隔开。只支持基本类型，print不仅可以打印字符串值，而且可以打印函数的返回值。

9.请问PHP中include和require
	require 和 include 几乎完全一样，除了处理失败的方式不同之外。require 在出错时产生 E_COMPILE_ERROR 级别的错误。换句话说将导致脚本中止而 include 只产生警告（E_WARNING），脚本会继续运行。 

10.请问GET和POST方法有什么区别？
	我们再网页上填写的表单信息都可以通过这两个方法将数据传递到服务器上，当我们使用GET方法是，所有的信息都会出现在URL地址中，并且使用GET方法最多只能传递1024个字符，所以如果在传输量小或者安全性不那么重要的情况下可以使用GET方法。说到POST方法，最多可以传输2MB字节的数据，而且可以根据需要调节。
	
11.PHP中获取图像尺寸大小的方法是什么？
	getimagesize () 获取图片的尺寸
	Imagesx () 获取图片的宽度
	Imagesy () 获取图片的高度

12.PHP中的PEAR是什么？
	PEAR也就是为PHP扩展与应用库（PHP Extension and Application Repository），它是一个PHP扩展及应用的一个代码仓库。

13.如何用PHP和MySQL上传视频？
	我们可以在数据库中存放视频的地址，而不需要将真正的视频数据存在数据库中。可以将视频数据存放在服务器的指定文件夹下，上传的默认大小是2MB，但是我们也可以在php.ini文件中修改max_file size选项来改变。

14.PHP中的错误类型有哪些？
	PHP中遇到的错误类型大致有3类。
	提示：这都是一些非常正常的信息，而非重大的错误，有些甚至不会展示给用户。比如访问不存在的变量。
	警告：这是有点严重的错误，将会把警告信息展示给用户，但不会影响代码的输出，比如包含一些不存在的文件。
	错误：这是真正的严重错误，比如访问不存在的PHP类。

15.如何在PHP中定义常量？
	PHP中使用Define () 来定义常量。
	define (“Newconstant”, 30);

16.如何不使用submit按钮来提交表单？
	如果我们不想用submit按钮来提交表单，我们也可以用超链接来提交，我们可以这样写代码：
	<a href=”javascript: document.myform.submit();”>Submit Me</a>

17.session与cookie的区别?
	session:储存用户访问的全局唯一变量,存储在服务器上的php指定的目录中的（session_dir）的位置进行的存放     cookie:用来存储连续訪問一个頁面时所使用，是存储在客户端，对于Cookie来说是存储在用户WIN的Temp目录中的。      两者都可通过时间来设置时间长短

18.数据库中的事务是什么
	MySQL 事务主要用于处理操作量大，复杂度高的数据。比如说，在人员管理系统中，你删除一个人员，你即需要删除人员的基本资料，也要删除和该人员相关的信息，如信箱，文章等等，这样，这些数据库操作语句就构成一个事务！
	在MySQL中只有使用了Innodb数据库引擎的数据库或表才支持事务
	事务处理可以用来维护数据库的完整性，保证成批的SQL语句要么全部执行，要么全部不执行
	事务用来管理insert,update,delete语句
	一般来说，事务是必须满足4个条件（ACID）： Atomicity（原子性）、Consistency（稳定性）、Isolation（隔离性）、Durability（可靠性）
	1、事务的原子性：一组事务，要么成功；要么撤回。
	2、稳定性 ： 有非法数据（外键约束之类），事务撤回。
	3、隔离性：事务独立运行。一个事务处理后的结果，影响了其他事务，那么其他事务会撤回。事务的100%隔离，需要牺牲速度。
	4、可靠性：软、硬件崩溃后，InnoDB数据表驱动会利用日志文件重构修改。可靠性和高速度不可兼得， innodb_flush_log_at_trx_commit选项 决定什么时候吧事务保存到日志里。

19.能够使HTML和PHP分离开使用的模板
	Smarty,Dwoo,TinyButStrong,Template Lite,Savant,phemplate,XTemplate

20.使用哪些工具进行版本控制
	cvs,svn,vss;

21.优化MYSQL数据库的方法
	1、选取最适用的字段属性,尽可能减少定义字段长度,尽量把字段设置NOT NULL,例如'省份,性别',最好设置为ENUM  2、使用连接（JOIN）来代替子查询:     
	3、使用联合(UNION)来代替手动创建的临时表    
	4、事务处理:
	5、锁定表,优化事务处理:     
	6、使用外键,优化锁定表      
	7、建立索引:     
	8、优化查询语句 

22.对于大流量的网站,您采用什么样的方法来解决访问量问题?
	确认服务器硬件是否足够支持当前的流量,数据库读写分离,优化数据表,     
	程序功能规则,禁止外部的盗链,控制大文件的下载,使用不同主机分流主要流量

23.禁用COOKIE 后 SEESION 还能用吗?
	cookie是保存在本地的，而seesion是保存在服务器上的。所以两者没有直接的关系，禁用cookie后seesion依然可以用。

24.Mysql可以有哪些索引
	普通索引
	唯一索引
	主键索引

25.GD库是做什么用的?
	gd库提供了一系列用来处理图片的API，使用GD库可以处理图片，或者生成图片。 在网站上GD库通常用来生成缩略图或者用来对图片加水印或者对网站数据生成报表。

26.在php类中权限控制修饰符有哪些？
	public(公共),private(私用),protected(继承)

27.请写出php5的构造函数和析构函数
	__construct , __destruct

28.php冒泡程序
	$arr = array(11,1,32,101,3,100);
	$tmp ="";
	for($k=1;$k<count($arr);$k++){
		for($i=0;$i<count($arr)-$k;$i++){
			if($arr[$i]>$arr[$i+1]){
				$tmp = $arr[$i];
				$arr[$i] = $arr[$i+1];
				$arr[$i+1] = $tmp;
			}
		}
	}

29.判断 一个范围 10-9999数中回文(对称)
for($k=10;$k<=9999;$k++){
	$half = floor(strlen($k)/2);
	$flag = true;
	for($i=0;$i<$half;$i++){
		$x =substr($k,$i,1);//字符串前一半的每一位
		$y =substr($k,-$i-1,1);//字符串后一半对应的每一位
		if($x!=$y){
			$flag = false;
			break;
		}
	}
	if($flag){
		echo $k.'是回文<br/>';
	}
}

30.判断范围2-100中的素数
for($k=2;$k<=100;$k++){
	$flag = true;
	for($i=2;$i<$k;$i++){
		if($k%$i==0){
			$flag = false;
			break;
		}
	}
	if($flag){
		echo $k.'是素数<br/>';
	}
}

31.声明对象接口关键词?
	interface
	implements

32.对象结构支持多继承吗？
	支持

33.数组快速排序(二分发)
	$arr = array(20,15,33,44,12,18,17,32,10,77,26,16,14);
	大的放左边，小的放右边
				|
				|
				20
			   /  \
			  33   15
			 /  \  / \
			44    18  12




















